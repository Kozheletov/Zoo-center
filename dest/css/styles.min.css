/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}@font-face{font-family:'PT Sans';font-style:normal;font-display:swap;font-weight:400;src:local(''),url(../fonts/pt-sans-v16-latin_cyrillic-regular.woff2) format('woff2'),url(../fonts/pt-sans-v16-latin_cyrillic-regular.woff) format('woff')}@font-face{font-family:'PT Sans';font-style:normal;font-display:swap;font-weight:700;src:local(''),url(../fonts/pt-sans-v16-latin_cyrillic-700.woff2) format('woff2'),url(../fonts/pt-sans-v16-latin_cyrillic-700.woff) format('woff')}:root{box-sizing:border-box}*,::after,::before{box-sizing:inherit}.reset-list{margin:0;padding:0;list-style:none}.responsive-img{display:block;max-width:100%;height:auto}.visually-hidden{position:absolute;width:1px;height:1px;margin:-1px;border:0;padding:0;white-space:nowrap;clip:rect(0 0 0 0);overflow:hidden}a,button{cursor:pointer}body{font-family:'PT Sans',sans-serif;min-width:360px}.wrapper{max-width:1920px;margin:0 auto;background-image:url(../img/promo-mobile.webp);background-repeat:no-repeat;background-position:center 0;background-size:contain}.container{margin:0 auto}.main-header{min-height:400px;padding-top:16px;padding-left:16px;padding-right:16px}.burger-menu,.button-cart{padding:0;border:0;background-color:transparent;z-index:10;grid-row:1/2}.burger-menu{padding:10px 8px;justify-self:start;align-self:start;grid-column:1/2}.button-cart{padding:7px 9px;justify-self:end;align-self:start;grid-column:3/4}.logo{grid-column:2/3;grid-row:1/2}.main-site-nav{display:grid;grid-template-columns:1fr 1fr 1fr;grid-template-rows:auto;align-items:center}.main-nav-list{grid-column:1/-1;grid-row:1/2;background-color:#000a06;margin-top:0;margin-left:0;padding:10px;text-align:center;display:none}.main-nav-list__item:not(:last-child){margin-bottom:15px}.main-nav-list__link{text-decoration:none;text-transform:uppercase;color:#fff;font-weight:700}.show{display:block}@media (min-width:620px){.wrapper{background-image:url(../img/promo.webp)}}@media (min-width:1200px){.container{max-width:1600px}.burger-menu{display:none}.button-cart{place-self:center center}.logo{grid-column:1/2}.main-site-nav{grid-template-columns:auto 1fr auto}.main-nav-list{grid-column:2/3;background-color:transparent;display:flex;flex-wrap:wrap;padding-left:90px}.main-nav-list__item:not(:last-child){margin-bottom:0;margin-right:30px}}@media (min-width:1632px){.main-header{padding-top:50px;padding-left:0;padding-right:0}.main-nav-list__item:not(:last-child){margin-right:56px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
